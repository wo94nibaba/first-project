今天完成的事情：
1.

2.

明天计划的事情： 

遇到的问题：
 
收获：

筛选注释/数据排序/新增、编辑数据/占位符/修改密码注释。



敏捷开发：一种以人为核心、迭代、循序渐进的开发方法。
以人为核心，尽量少些文档，注重人与人当面交流。
迭代吧一个复杂且长周期的的任务分解成小周期的任务，一个小周期就是一次迭代。每次迭代产生一个可交付软件。
scrum和xp模式：使团队高效工作。
scrum三大角色：产品负责人、流程管理员、开发团队。
1、我们首先需要确定一个Product Backlog（按优先顺序排列的一个产品需求列表），这个是由Product Owner 负责的；

2、Scrum Team根据Product Backlog列表，做工作量的预估和安排；

3、有了Product Backlog列表，我们需要通过 Sprint Planning Meeting（Sprint计划会议） 来从中挑选出一个Story作为本次迭代完成的目标，这个目标的时间周期是1~4个星期，然后把这个Story进行细化，形成一个Sprint Backlog；

4、Sprint Backlog是由Scrum Team去完成的，每个成员根据Sprint Backlog再细化成更小的任务（细到每个任务的工作量在2天内能完成）；

5、在Scrum Team完成计划会议上选出的Sprint Backlog过程中，需要进行 Daily Scrum Meeting（每日站立会议），每次会议控制在15分钟左右，每个人都必须发言，并且要向所有成员当面汇报你昨天完成了什么，并且向所有成员承诺你今天要完成什么，同时遇到不能解决的问题也可以提出，每个人回答完成后，要走到黑板前更新自己的 Sprint burn down（Sprint燃尽图）；

6、做到每日集成，也就是每天都要有一个可以成功编译、并且可以演示的版本；很多人可能还没有用过自动化的每日集成，其实TFS就有这个功能，它可以支持每次有成员进行签入操作的时候，在服务器上自动获取最新版本，然后在服务器中编译，如果通过则马上再执行单元测试代码，如果也全部通过，则将该版本发布，这时一次正式的签入操作才保存到TFS中，中间有任何失败，都会用邮件通知项目管理人员；

7、当一个Story完成，也就是Sprint Backlog被完成，也就表示一次Sprint完成，这时，我们要进行 Srpint Review Meeting（演示会议），也称为评审会议，产品负责人和客户都要参加（最好本公司老板也参加），每一个Scrum Team的成员都要向他们演示自己完成的软件产品（这个会议非常重要，一定不能取消）；

8、最后就是 Sprint Retrospective Meeting（回顾会议），也称为总结会议，以轮流发言方式进行，每个人都要发言，总结并讨论改进的地方，放入下一轮Sprint的产品需求中；




敏捷开发：
1.需求规划和分期
2. 需求评审
3. 需求讲解
4. 方案评审
5. 每日晨会
6. 性能测试
7.  CodeReview
8.  Demo
9. 测试阶段
10.线上Bug修改流程

为什么要敏捷开发：
项目开发周期太长用户需求的改变 产品完全不能用。职责明确，提升项目人员的效率，节省时间成本和资金成本。
三个工具： 禅道 Wiki 邮件

产品内部需求评审：pm团队、ue团队，是否考虑所有需求细节，提前预估功能的所需时间。不止一次两次。

需求评审：
参加人员：所有有发言权的，有想表达自己建议的。
原则上需求评审通过后不再修改需求。
必须参加：技术总监、各部门leader：开发（前端、后端、ios。andrio）、ue、ui、测试。不建议开发人员出席。
产出：需求多长时间完成、需求由哪些人员做、下次需求讲解什么时候开始。

需求讲解：产品经理、所有开发人员。
项目普通开发人员：理解透彻需求，没有偏差、遗漏。需求能不能做，是否存在缺陷。反馈给产品经理。

方案评审：没有项目经理的角色。所有开发人员自主设计方案。不推荐架构师独自架构好框架。而是所有工程师设计出方案进行评审。个人能力越强，敏捷开发效益越高。

开发阶段：前后端定义接口。story拆解成task。不推荐有单独的项目ownner，每一个开发人员都死ownner。当指定其中一个人为项目ownner后，所有其他开发人员会后退一步。

晨会：leader看晨报，发现项目的问题，解决问题。

demo：开发将demo交付，pm、测试、开发leader验收。把所有功能演示一遍。

运维负责把代码部署的测试环境。

测试：所有测试用例跑一遍。找出bug。推动bug解决。
